datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  recipes   Recipe[]
  ratings   Rating[]
  comments  Comment[]
  followers Follows[] @relation("Followed")
  following Follows[] @relation("Following")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Recipe {
  id           Int          @id @default(autoincrement())
  title        String
  description  String?
  cuisine      String?
  difficulty   String?
  cookingTime  Int?         // in minutes
  author       User         @relation(fields: [authorId], references: [id])
  authorId     Int
  ingredients  Ingredient[]
  instructions Instruction[]
  ratings      Rating[]
  comments     Comment[]
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
}

model Ingredient {
  id       Int    @id @default(autoincrement())
  name     String
  quantity String
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int
}

model Instruction {
  id       Int    @id @default(autoincrement())
  step     Int
  text     String
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int
}

model Rating {
  id       Int    @id @default(autoincrement())
  value    Int    // 1-5
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int
  createdAt DateTime @default(now())
}

model Comment {
  id       Int    @id @default(autoincrement())
  text     String
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
  recipe   Recipe @relation(fields: [recipeId], references: [id])
  recipeId Int
  createdAt DateTime @default(now())
}

model Follows {
  id         Int  @id @default(autoincrement())
  follower   User @relation("Following", fields: [followerId], references: [id])
  followerId Int
  followed   User @relation("Followed", fields: [followedId], references: [id])
  followedId Int
  createdAt  DateTime @default(now())
  
  @@unique([followerId, followedId])
}
